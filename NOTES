

RELEASE NOTES


RECENT CHANGES

1.5.9

* Various changes related to RPM packaging.

* Fixed the HTML version of the tutorial.

1.5.6

* The new '--fetch' option in af replaces the equivalent function in
affetch; and affetch is no longer compiled by default.

1.5.4

* Disabled the '--long-words' option.  There were bugs associated with
this that will have to be addressed in a future release.  As of 1.5.4,
long words are again indexed by default and cannot be suppressed.

1.5.3

* Experimental search options, -n (--numhits), --skiphits, and
--totalhits.

1.5.2

* Fixed bug in 1.5.1 that caused incremental indexing (i.e. adding to
an existing database) not to work with -F.

1.5.1

* Development versions 1.5.x contain experimental code that allow
searching of unlinearized databases.  Linearizing is no longer
performed by default but must be specified explicitly with the '-L'
command option.

1.4.x / 1.3.x

* The linearizing (optimizing) code has been completely rewritten and
is now somewhat faster.  The '--old-linear' option disables the new
function and instead uses the old linearization function from stable
versions 1.2.x.

* Words longer than the maximum word length, currently 32 characters,
are no longer indexed.  To include the words (truncated), use the
'--long-words' option.


OTHER NOTES, BUGS, AND OUTSTANDING ISSUES

* There is a new man page for af in doc/ which includes additional
options not mentioned in the tutorial.

* There is a new "af" tool that combines most of the functions of
afindex, afsearch, afadmin, and affetch.  Using the old tools is
deprecated, and they are no longer compiled by default.  To compile
them, you can use:

  cd src; gmake old

* Memory leaks.  There seems to be a memory leak in the search code.
We could use assistance in tracking this down.

* Stop words.  All words are currently indexed and searched.

* Multiple documents.  The --split option specifies a delimiter string
to show the boundaries of multiple documents within a file.  This
should probably be enhanced a little bit to allow characters such as
'\n'.

* Using '*' alone as a search term.  This is undefined and may cause
strange behavior.

* Stability of C API.  The C interface will be undergoing major
changes.

* Phrase searching without being enabled.  Searching for a phrase in a
database that was created without --phrase returns no results rather
than an error message.  This needs to be fixed.

See the Bugs Tracker at http://sourceforge.net/projects/amberfish/ for
additional outstanding problems.

